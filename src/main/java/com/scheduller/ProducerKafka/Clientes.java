/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.scheduller.ProducerKafka;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Clientes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -396104496733842520L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Clientes\",\"namespace\":\"com.scheduller.ProducerKafka\",\"fields\":[{\"name\":\"id_cliente\",\"type\":\"int\"},{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"apellido\",\"type\":\"string\"},{\"name\":\"correo_electronico\",\"type\":\"string\"},{\"name\":\"telefono\",\"type\":\"string\"},{\"name\":\"direccion\",\"type\":\"string\"},{\"name\":\"fecha_registro\",\"type\":\"string\"},{\"name\":\"activo\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Clientes> ENCODER =
      new BinaryMessageEncoder<Clientes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Clientes> DECODER =
      new BinaryMessageDecoder<Clientes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Clientes> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Clientes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Clientes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Clientes>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Clientes to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Clientes from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Clientes instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Clientes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int id_cliente;
  private java.lang.CharSequence nombre;
  private java.lang.CharSequence apellido;
  private java.lang.CharSequence correo_electronico;
  private java.lang.CharSequence telefono;
  private java.lang.CharSequence direccion;
  private java.lang.CharSequence fecha_registro;
  private int activo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Clientes() {}

  /**
   * All-args constructor.
   * @param id_cliente The new value for id_cliente
   * @param nombre The new value for nombre
   * @param apellido The new value for apellido
   * @param correo_electronico The new value for correo_electronico
   * @param telefono The new value for telefono
   * @param direccion The new value for direccion
   * @param fecha_registro The new value for fecha_registro
   * @param activo The new value for activo
   */
  public Clientes(java.lang.Integer id_cliente, java.lang.CharSequence nombre, java.lang.CharSequence apellido, java.lang.CharSequence correo_electronico, java.lang.CharSequence telefono, java.lang.CharSequence direccion, java.lang.CharSequence fecha_registro, java.lang.Integer activo) {
    this.id_cliente = id_cliente;
    this.nombre = nombre;
    this.apellido = apellido;
    this.correo_electronico = correo_electronico;
    this.telefono = telefono;
    this.direccion = direccion;
    this.fecha_registro = fecha_registro;
    this.activo = activo;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id_cliente;
    case 1: return nombre;
    case 2: return apellido;
    case 3: return correo_electronico;
    case 4: return telefono;
    case 5: return direccion;
    case 6: return fecha_registro;
    case 7: return activo;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id_cliente = (java.lang.Integer)value$; break;
    case 1: nombre = (java.lang.CharSequence)value$; break;
    case 2: apellido = (java.lang.CharSequence)value$; break;
    case 3: correo_electronico = (java.lang.CharSequence)value$; break;
    case 4: telefono = (java.lang.CharSequence)value$; break;
    case 5: direccion = (java.lang.CharSequence)value$; break;
    case 6: fecha_registro = (java.lang.CharSequence)value$; break;
    case 7: activo = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id_cliente' field.
   * @return The value of the 'id_cliente' field.
   */
  public int getIdCliente() {
    return id_cliente;
  }


  /**
   * Sets the value of the 'id_cliente' field.
   * @param value the value to set.
   */
  public void setIdCliente(int value) {
    this.id_cliente = value;
  }

  /**
   * Gets the value of the 'nombre' field.
   * @return The value of the 'nombre' field.
   */
  public java.lang.CharSequence getNombre() {
    return nombre;
  }


  /**
   * Sets the value of the 'nombre' field.
   * @param value the value to set.
   */
  public void setNombre(java.lang.CharSequence value) {
    this.nombre = value;
  }

  /**
   * Gets the value of the 'apellido' field.
   * @return The value of the 'apellido' field.
   */
  public java.lang.CharSequence getApellido() {
    return apellido;
  }


  /**
   * Sets the value of the 'apellido' field.
   * @param value the value to set.
   */
  public void setApellido(java.lang.CharSequence value) {
    this.apellido = value;
  }

  /**
   * Gets the value of the 'correo_electronico' field.
   * @return The value of the 'correo_electronico' field.
   */
  public java.lang.CharSequence getCorreoElectronico() {
    return correo_electronico;
  }


  /**
   * Sets the value of the 'correo_electronico' field.
   * @param value the value to set.
   */
  public void setCorreoElectronico(java.lang.CharSequence value) {
    this.correo_electronico = value;
  }

  /**
   * Gets the value of the 'telefono' field.
   * @return The value of the 'telefono' field.
   */
  public java.lang.CharSequence getTelefono() {
    return telefono;
  }


  /**
   * Sets the value of the 'telefono' field.
   * @param value the value to set.
   */
  public void setTelefono(java.lang.CharSequence value) {
    this.telefono = value;
  }

  /**
   * Gets the value of the 'direccion' field.
   * @return The value of the 'direccion' field.
   */
  public java.lang.CharSequence getDireccion() {
    return direccion;
  }


  /**
   * Sets the value of the 'direccion' field.
   * @param value the value to set.
   */
  public void setDireccion(java.lang.CharSequence value) {
    this.direccion = value;
  }

  /**
   * Gets the value of the 'fecha_registro' field.
   * @return The value of the 'fecha_registro' field.
   */
  public java.lang.CharSequence getFechaRegistro() {
    return fecha_registro;
  }


  /**
   * Sets the value of the 'fecha_registro' field.
   * @param value the value to set.
   */
  public void setFechaRegistro(java.lang.CharSequence value) {
    this.fecha_registro = value;
  }

  /**
   * Gets the value of the 'activo' field.
   * @return The value of the 'activo' field.
   */
  public int getActivo() {
    return activo;
  }


  /**
   * Sets the value of the 'activo' field.
   * @param value the value to set.
   */
  public void setActivo(int value) {
    this.activo = value;
  }

  /**
   * Creates a new Clientes RecordBuilder.
   * @return A new Clientes RecordBuilder
   */
  public static com.scheduller.ProducerKafka.Clientes.Builder newBuilder() {
    return new com.scheduller.ProducerKafka.Clientes.Builder();
  }

  /**
   * Creates a new Clientes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Clientes RecordBuilder
   */
  public static com.scheduller.ProducerKafka.Clientes.Builder newBuilder(com.scheduller.ProducerKafka.Clientes.Builder other) {
    if (other == null) {
      return new com.scheduller.ProducerKafka.Clientes.Builder();
    } else {
      return new com.scheduller.ProducerKafka.Clientes.Builder(other);
    }
  }

  /**
   * Creates a new Clientes RecordBuilder by copying an existing Clientes instance.
   * @param other The existing instance to copy.
   * @return A new Clientes RecordBuilder
   */
  public static com.scheduller.ProducerKafka.Clientes.Builder newBuilder(com.scheduller.ProducerKafka.Clientes other) {
    if (other == null) {
      return new com.scheduller.ProducerKafka.Clientes.Builder();
    } else {
      return new com.scheduller.ProducerKafka.Clientes.Builder(other);
    }
  }

  /**
   * RecordBuilder for Clientes instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Clientes>
    implements org.apache.avro.data.RecordBuilder<Clientes> {

    private int id_cliente;
    private java.lang.CharSequence nombre;
    private java.lang.CharSequence apellido;
    private java.lang.CharSequence correo_electronico;
    private java.lang.CharSequence telefono;
    private java.lang.CharSequence direccion;
    private java.lang.CharSequence fecha_registro;
    private int activo;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.scheduller.ProducerKafka.Clientes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id_cliente)) {
        this.id_cliente = data().deepCopy(fields()[0].schema(), other.id_cliente);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.nombre)) {
        this.nombre = data().deepCopy(fields()[1].schema(), other.nombre);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.apellido)) {
        this.apellido = data().deepCopy(fields()[2].schema(), other.apellido);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.correo_electronico)) {
        this.correo_electronico = data().deepCopy(fields()[3].schema(), other.correo_electronico);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.telefono)) {
        this.telefono = data().deepCopy(fields()[4].schema(), other.telefono);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.direccion)) {
        this.direccion = data().deepCopy(fields()[5].schema(), other.direccion);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.fecha_registro)) {
        this.fecha_registro = data().deepCopy(fields()[6].schema(), other.fecha_registro);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.activo)) {
        this.activo = data().deepCopy(fields()[7].schema(), other.activo);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing Clientes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.scheduller.ProducerKafka.Clientes other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id_cliente)) {
        this.id_cliente = data().deepCopy(fields()[0].schema(), other.id_cliente);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nombre)) {
        this.nombre = data().deepCopy(fields()[1].schema(), other.nombre);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.apellido)) {
        this.apellido = data().deepCopy(fields()[2].schema(), other.apellido);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.correo_electronico)) {
        this.correo_electronico = data().deepCopy(fields()[3].schema(), other.correo_electronico);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.telefono)) {
        this.telefono = data().deepCopy(fields()[4].schema(), other.telefono);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.direccion)) {
        this.direccion = data().deepCopy(fields()[5].schema(), other.direccion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fecha_registro)) {
        this.fecha_registro = data().deepCopy(fields()[6].schema(), other.fecha_registro);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.activo)) {
        this.activo = data().deepCopy(fields()[7].schema(), other.activo);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'id_cliente' field.
      * @return The value.
      */
    public int getIdCliente() {
      return id_cliente;
    }


    /**
      * Sets the value of the 'id_cliente' field.
      * @param value The value of 'id_cliente'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setIdCliente(int value) {
      validate(fields()[0], value);
      this.id_cliente = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id_cliente' field has been set.
      * @return True if the 'id_cliente' field has been set, false otherwise.
      */
    public boolean hasIdCliente() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id_cliente' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearIdCliente() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombre' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombre() {
      return nombre;
    }


    /**
      * Sets the value of the 'nombre' field.
      * @param value The value of 'nombre'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setNombre(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nombre = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'nombre' field has been set.
      * @return True if the 'nombre' field has been set, false otherwise.
      */
    public boolean hasNombre() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'nombre' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearNombre() {
      nombre = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'apellido' field.
      * @return The value.
      */
    public java.lang.CharSequence getApellido() {
      return apellido;
    }


    /**
      * Sets the value of the 'apellido' field.
      * @param value The value of 'apellido'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setApellido(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.apellido = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'apellido' field has been set.
      * @return True if the 'apellido' field has been set, false otherwise.
      */
    public boolean hasApellido() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'apellido' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearApellido() {
      apellido = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'correo_electronico' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorreoElectronico() {
      return correo_electronico;
    }


    /**
      * Sets the value of the 'correo_electronico' field.
      * @param value The value of 'correo_electronico'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setCorreoElectronico(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.correo_electronico = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'correo_electronico' field has been set.
      * @return True if the 'correo_electronico' field has been set, false otherwise.
      */
    public boolean hasCorreoElectronico() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'correo_electronico' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearCorreoElectronico() {
      correo_electronico = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'telefono' field.
      * @return The value.
      */
    public java.lang.CharSequence getTelefono() {
      return telefono;
    }


    /**
      * Sets the value of the 'telefono' field.
      * @param value The value of 'telefono'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setTelefono(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.telefono = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'telefono' field has been set.
      * @return True if the 'telefono' field has been set, false otherwise.
      */
    public boolean hasTelefono() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'telefono' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearTelefono() {
      telefono = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'direccion' field.
      * @return The value.
      */
    public java.lang.CharSequence getDireccion() {
      return direccion;
    }


    /**
      * Sets the value of the 'direccion' field.
      * @param value The value of 'direccion'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setDireccion(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.direccion = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'direccion' field has been set.
      * @return True if the 'direccion' field has been set, false otherwise.
      */
    public boolean hasDireccion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'direccion' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearDireccion() {
      direccion = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'fecha_registro' field.
      * @return The value.
      */
    public java.lang.CharSequence getFechaRegistro() {
      return fecha_registro;
    }


    /**
      * Sets the value of the 'fecha_registro' field.
      * @param value The value of 'fecha_registro'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setFechaRegistro(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.fecha_registro = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'fecha_registro' field has been set.
      * @return True if the 'fecha_registro' field has been set, false otherwise.
      */
    public boolean hasFechaRegistro() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'fecha_registro' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearFechaRegistro() {
      fecha_registro = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'activo' field.
      * @return The value.
      */
    public int getActivo() {
      return activo;
    }


    /**
      * Sets the value of the 'activo' field.
      * @param value The value of 'activo'.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder setActivo(int value) {
      validate(fields()[7], value);
      this.activo = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'activo' field has been set.
      * @return True if the 'activo' field has been set, false otherwise.
      */
    public boolean hasActivo() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'activo' field.
      * @return This builder.
      */
    public com.scheduller.ProducerKafka.Clientes.Builder clearActivo() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Clientes build() {
      try {
        Clientes record = new Clientes();
        record.id_cliente = fieldSetFlags()[0] ? this.id_cliente : (java.lang.Integer) defaultValue(fields()[0]);
        record.nombre = fieldSetFlags()[1] ? this.nombre : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.apellido = fieldSetFlags()[2] ? this.apellido : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.correo_electronico = fieldSetFlags()[3] ? this.correo_electronico : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.telefono = fieldSetFlags()[4] ? this.telefono : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.direccion = fieldSetFlags()[5] ? this.direccion : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.fecha_registro = fieldSetFlags()[6] ? this.fecha_registro : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.activo = fieldSetFlags()[7] ? this.activo : (java.lang.Integer) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Clientes>
    WRITER$ = (org.apache.avro.io.DatumWriter<Clientes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Clientes>
    READER$ = (org.apache.avro.io.DatumReader<Clientes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.id_cliente);

    out.writeString(this.nombre);

    out.writeString(this.apellido);

    out.writeString(this.correo_electronico);

    out.writeString(this.telefono);

    out.writeString(this.direccion);

    out.writeString(this.fecha_registro);

    out.writeInt(this.activo);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id_cliente = in.readInt();

      this.nombre = in.readString(this.nombre instanceof Utf8 ? (Utf8)this.nombre : null);

      this.apellido = in.readString(this.apellido instanceof Utf8 ? (Utf8)this.apellido : null);

      this.correo_electronico = in.readString(this.correo_electronico instanceof Utf8 ? (Utf8)this.correo_electronico : null);

      this.telefono = in.readString(this.telefono instanceof Utf8 ? (Utf8)this.telefono : null);

      this.direccion = in.readString(this.direccion instanceof Utf8 ? (Utf8)this.direccion : null);

      this.fecha_registro = in.readString(this.fecha_registro instanceof Utf8 ? (Utf8)this.fecha_registro : null);

      this.activo = in.readInt();

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id_cliente = in.readInt();
          break;

        case 1:
          this.nombre = in.readString(this.nombre instanceof Utf8 ? (Utf8)this.nombre : null);
          break;

        case 2:
          this.apellido = in.readString(this.apellido instanceof Utf8 ? (Utf8)this.apellido : null);
          break;

        case 3:
          this.correo_electronico = in.readString(this.correo_electronico instanceof Utf8 ? (Utf8)this.correo_electronico : null);
          break;

        case 4:
          this.telefono = in.readString(this.telefono instanceof Utf8 ? (Utf8)this.telefono : null);
          break;

        case 5:
          this.direccion = in.readString(this.direccion instanceof Utf8 ? (Utf8)this.direccion : null);
          break;

        case 6:
          this.fecha_registro = in.readString(this.fecha_registro instanceof Utf8 ? (Utf8)this.fecha_registro : null);
          break;

        case 7:
          this.activo = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










